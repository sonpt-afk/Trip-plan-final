:root{
    --primary: #{$primary};
    --dark: #{$dark};
    --success: #{$success};
    --error: #FF6370;
    font-family: 'Inter';
    font-weight: 400;
    p,span,h1,h2,h3,h4,a{
        text-decoration: none;
        margin: 0;
    }
    --gray-1: #23262F;
    --gray-2: #353945;
    --gray-5: #E6E8EC;
}

[data-bs-theme=light]{
    p,span,h1,h2,h3,h4{
        color: var(--gray-2);
    }
}

[data-bs-theme=dark]{
    p,span,h1,h2,h3,h4{
        color: var(--gray-5);
    }
}
@mixin createFont($selector, $fz: null, $lineHeight: null, $fw: null){
    #{$selector}{
        @if $fz{font-size: $fz;}
        @if $lineHeight{line-height: $lineHeight;}
        @if $fw{font-weight: $fw;}
    }
}

@include createFont('.hero-title', 64px, null, 800);
@include createFont('h1', 40px, 60px, 700);
@include createFont('h2', 30px, 45px, 600);
@include createFont('h3', 24px, 36px, 500);
@include createFont('h4', 20px, 28px, 500);
@include createFont('.t-18', 18px, 32px, null);
@include createFont('.t-16', 16px, 24px, null);
@include createFont('.t-14', 14px, 20px, null);
@include createFont('.t-12', 12px, 18px, null);
@include createFont('.fw-400', null, null, 400);
@include createFont('.fw-500', null, null, 500);
@include createFont('.fw-600', null, null, 600);
@include createFont('.fw-700', null, null, 700);
@include createFont('.fw-800', null, null, 800);

@mixin createUltil($prefix, $prop, $val){
    #{$prefix}-#{$val} {
        #{$prop}: #{$val}px;
      }
      #{$prefix}l-#{$val} {
          #{$prop}-left: #{$val}px;
      }
      #{$prefix}r-#{$val} {
          #{$prop}-right: #{$val}px;
      }
      #{$prefix}t-#{$val} {
          #{$prop}-top: #{$val}px;
      }
      #{$prefix}b-#{$val} {
          #{$prop}-bottom: #{$val}px;
      }
      #{$prefix}x-#{$val} {
          #{$prop}-left: #{$val}px;
          #{$prop}-right: #{$val}px;
      }
      #{$prefix}y-#{$val} {
          #{$prop}-top: #{$val}px;
          #{$prop}-bottom: #{$val}px;
      }
}

@for $i from 1 through 20 {
    $val: $i * 5;
    @include createUltil('.p', 'padding', $val);
    @include createUltil('.m', 'margin', $val);
}
  
@mixin shape($width, $height, $radius){
    width: $width;
    min-width: $width;
    @if $height{
        height: $height;
        min-height: $height;
    }
    border-radius: $radius;
}

@mixin circle($width){
    @include shape($width, $width, 50%);
}
.center-center{
    display: flex;
    justify-content: center;
    align-items: center;
}

.center-between{
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.column-center{
    display: flex;
    flex-direction: column;
    justify-content: center;
}


// common